"""
Text-to-Speech Module using Kokoro
Wrapper around fastrtc's TTS model
"""
from fastrtc import get_tts_model


class TextToSpeech:
    def __init__(self):
        """Initialize Kokoro TTS model"""
        print("üîä Loading Kokoro TTS model...")
        self.model = get_tts_model()  # Kokoro v1.0 ONNX
        print("‚úÖ Kokoro TTS loaded successfully")

    def synthesize(self, text):
        """
        Synthesize text to speech (streaming)

        Args:
            text (str): Text to convert to speech

        Yields:
            Audio chunks
        """
        try:
            for audio_chunk in self.model.stream_tts_sync(text):
                yield audio_chunk
        except Exception as e:
            print(f"‚ùå TTS Error: {e}")
            return

    def synthesize_blocking(self, text):
        """
        Synthesize text to speech (blocking, returns all audio)

        Args:
            text (str): Text to convert to speech

        Returns:
            bytes: Complete audio data
        """
        audio_chunks = []
        for chunk in self.synthesize(text):
            audio_chunks.append(chunk)
        return b''.join(audio_chunks) if audio_chunks else b''